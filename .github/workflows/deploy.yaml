name: Deploy Pipeline to AWS Lambda (via ECR)

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Debug - Print image URI
        run: |
          echo "🔍 IMAGE_URI=${{ secrets.ECR_REGISTRY }}/${{ secrets.IMAGE_NAME }}:latest"

      - name: Build and push Docker image to ECR (latest only)
        run: |
          IMAGE_URI=${{ secrets.ECR_REGISTRY }}/${{ secrets.IMAGE_NAME }}:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Save Docker image as tar.gz (with commit hash)
        run: |
          TAG_DATE=$(date +%Y%m%d)
          SAFE_NAME=$(echo "${{ secrets.IMAGE_NAME }}" | tr '/' '-')
          ARCHIVE_NAME=${SAFE_NAME}-${TAG_DATE}-${{ github.sha }}.tar.gz
          IMAGE_URI=${{ secrets.ECR_REGISTRY }}/${{ secrets.IMAGE_NAME }}:latest
          docker save $IMAGE_URI | gzip > $ARCHIVE_NAME

      - name: Upload Docker image to S3
        run: |
          TAG_DATE=$(date +%Y%m%d)
          SAFE_NAME=$(echo "${{ secrets.IMAGE_NAME }}" | tr '/' '-')
          ARCHIVE_NAME=${SAFE_NAME}-${TAG_DATE}-${{ github.sha }}.tar.gz
          aws s3 cp $ARCHIVE_NAME s3://${{ secrets.S3_BUCKET }}/images/$TAG_DATE/$ARCHIVE_NAME

      - name: Update Lambda to use latest ECR image
        run: |
          IMAGE_URI=${{ secrets.ECR_REGISTRY }}/${{ secrets.IMAGE_NAME }}:latest
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --image-uri $IMAGE_URI
